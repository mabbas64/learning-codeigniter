1- Download CodeIgniter (I got the 4.1.2 version on 5nov2013 first time use).
2- Extract the files to a folder in /htdocs. Create apache VirtualHost ( i did http://ci.dev/) in httpd-vhosts.conf
----- also update the windows hosts file to point to ci.dev in /htdocs/ci-project
3- Add an encryption key in the config.php inside /application folder of our CI project.
4- Create a mysql DB from phpMyAdmin etc, we'll used this in our database.php of CI project.

5- Modifying autload.php 
----Libraries: add 'database', and 'session' libraries to the $autoload['libraries'] array,
------- this'll allow us to use database and sessions on all of our controller
----Helpers: are basically like libraries but there's not as much to them.
------- we'll add the 'url' helper here.
----!---- Its best to add libraries/helpers etc within the controllers if you need those in fewer areas.

6- Adding DB tables for the test project
---- add a 'posts' table from phpMyAdmin  ,with fields > http://i.imgur.com/siarX5V.jpg
---! table names are plural in frameworks

7- Create a Model now.
---- save the file in /models folder of project as 'post.php'. Model names are singular in frameowkrs

8- Create a Controller
---- save a file in /controllers folder of project as 'posts.php'. Controller names are plural
----- Add an index function that fetches db data
------! Notice how the controller matches name of the db table  and 

9- Print the database fetched data temporary by visiting http://ci.dev/index.php/posts
---- in the url above, index.php is the main ci index.php and /posts is our controller 
------- you'll see a blank array (as we dont have the DB tables filled yet) http://i.imgur.com/1tQnWUk.jpg

10- Pouplate DB table 'posts' via PHPmyAdmin.
----- http://i.imgur.com/MQ9ScJu.jpg
------- Visit again http://ci.dev/index.php/posts
--------- In browser you should see:   http://i.imgur.com/Zjfdljy.jpg  (doesn't have the inactive 3rd post)

11- Creating a View
---- create 'post_index.php' in /Views folder. It doesnt need a class, it'll contain all our HTML
--!!-- inside the 'posts' controller, load the view and pass it the $data array there- which has DB data.

12- Setting up Routes
------ 1- change default_controller in routes.php from 'welcome' to 'posts', so we get rid of default 
----------- CI message page on http://ci.dev/ , and it shud show the main posts controller, hence, view for now
----- also,we don't want do http://ci.dev/index.php/posts to view the posts on localhost
------- AFTER this step, we can access the posts and other pages without the /index.php/ in url
--------- e.g. http://ci.dev/posts
----- + http://ellislab.com/codeigniter/user-guide/general/urls.html
-------- copy the code and paste it in ur CI project's .htaccess file. 
----------  RewriteEngine on
			RewriteCond $1 !^(index\.php|images|robots\.txt)
			RewriteRule ^(.*)$ /index.php/$1 [L]

13- Active Record (Database):
- We can also do selectors on multiple lines/steps, instead of the single line one like we did previously
-- Single line: $this->db->select()->from('posts')->where('active',1)->order_by('date_added','desc')->limit($num,$start);
-- Multiple lines:
---- 	$this->db->select('*');
		$this->db->from('posts');
		$this->db->where('active',1);
		$this->db->where(array('active'=>1)); # this is the same as line above it, it just allows more conditions in array
		$this->db->order_by('date_added','desc');
		$this->db->limit($num,$start);
		// For Joining, we can do
		$this->db->join('users','users.userID=posts.userID','left');
		//alternatively, we can run a query by this also
		$query=$this->db->get_where('posts'array('active'=>1),$num,$start);
		# EVERYTHIG ABOVE THIS POINT IS JUST PREPARING THE QUERY. THE QUERY WILL ONLY RUN AFTER THE FOLLOWING Line		
-
- To run queries directly in CI, instead of using ActiveRecord, use:
-- $query = $this->db->query("SELECT * FROM posts WHERE active=1 ORDER BY date_added desc LIMIT $num,$start");
--- this is faster than using ActiveRecord also. 


